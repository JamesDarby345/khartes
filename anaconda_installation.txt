khartes is written in Python; it requires a number of 
external modules.  Below are the Anaconda commands 
I used in Windows to import the needed modules.  
Probably the pip commands and module names are 
similar, but I haven't tested them.  

One possibly unfamiliar package is pynrrd, 
which implements (in pure python) the NRRD format 
(Nearly Raw Raster Data).  This format consists 
of an ascii header followed by binary raster data;
khartes uses this format for storing data volumes.

Another unusual package is rectpack, which is
used for packing 2D rectangles in a minimum-size box.
It is called when exporting textures in the export-mesh
function.

I tested khartes in Python 3.11, but it probably works 
on slightly older versions of Python 3 as well.

User hari_seldon has informed me that the pip equivalent 
of opencv is opencv-python-headless (Thanks hari!).

The list below shows how to install modules from the
default conda repository.  

IMPORTANT:

Due to problems with the current (4.6.0) version of 
opencv in the default conda repository, you need to
install python 3.11 (not 3.12), and install a specific
version of glib before installing opencv.  It is a good
idea, after you install opencv, to check that you can
import it.  To do this check, type:
python -c "import cv2"
If no errors are printed, then opencv is installed correctly.

Installation list:

conda create -n vch python=3.11
activate vch
conda install glib=2.69.1
conda install opencv
conda install pyqt
conda install tifffile
conda install zarr
conda install scipy
conda install -c conda-forge pynrrd
conda install -c conda-forge rectpack

If you want to live on the bleeding edge, you can
install the conda-forge versions of all these packages.
If you do this, you are able to use python 3.12, and you 
don't need to install the glib package; the correct version 
of glib will be installed automatically.
As of mid-April 2024, these conda-forge versions seem
to work correctly.

# TODO: add a proper conda requirements file 

